const migrate = require('../src/utils/migrate');
const log = require('../src/utils/logger');
const { r } = require('../config/thinky');

const commands = [
  'up',
  'down',
  'release_mutex',
  'show_mutex'
];

const command = process.argv[2];

const barf = (msg) => {
  log.error('migration error', msg);
  process.exit(1);
};

if (!command) {
  barf('usage: npm run migrate [DIRECTION] [BACKSTOP]');
}

if (commands.indexOf(command) < 0) {
  barf(`migration command must be one of: ${commands.join(' ')}`);
}

if (command === 'up' && process.argv[3]) {
  barf('migrate up does not take an argument');
}

if (command === 'release_mutex' && process.argv[3]) {
  barf('migrate release_mutex does not take an argument');
}

if (command === 'release_mutex') {
  return migrate.releaseMutex()
  .then(() => r.getPoolMaster().drain())
  .then(() => process.exit());
}

if (command === 'show_mutex') {
  return migrate.queryMutex()
  .then(console.log)
  .then(() => r.getPoolMaster().drain())
  .then(() => process.exit());
}

migrate[command](process.argv[3])
.then(() => {
  r.getPoolMaster().drain()
  .then(() => process.exit());
})
.catch(barf);
