const { Router } = require('express');
const _ = require('lodash');
const controller = require('../controllers/{{snakeCasePlural}}.js');

const router = new Router();

module.exports = {
  http: router,
  socket: io => {
    const nsp = io.of('/{{kebabCasePlural}}');
    nsp.on('connection', socket => {
      controller.watch(socket.handshake.query)
      .then(({ result: cursor, warns = [], count }) => {
        warns.forEach(warn => socket.emit('warning', warn));

        if (count) socket.emit('metadata', { count });

        cursor.each((err, data) => {
          if (!data) return null;
          if (data.state) return socket.emit('state', data);
          return socket.emit('record', data);
        });
      });
    });
  }
};

router
  .get('/{{kebabCasePlural}}', function * (req, res) {
    const {{snakeCasePlural}} = yield controller.get(req.query);
    res.json({{snakeCasePlural}} || []);
  })
  .get('/{{kebabCasePlural}}/:id', function * (req, res) {
    const {{snakeCase}} = yield controller.get(_.assign({ id: req.params.id }, req.query));
    if ({{snakeCase}}) {
      res.json({{snakeCase}});
    } else {
      res.status(404).json({ error: 'Not found' });
    }
  })
  .post('/{{kebabCasePlural}}', function * (req, res) {
    const {{snakeCase}} = yield controller.create(req.body);
    res.status(201).json({{snakeCase}});
  })
  .put('/{{kebabCasePlural}}/:id', function * (req, res) {
    const {{snakeCase}} = yield controller.update(req.body);
    res.json({{snakeCase}});
  })
  .delete('/{{kebabCasePlural}}/:id', function * (req, res) {
    yield controller.delete(req.params.id);
    res.json({ ok: true });
  });

{{#isUser}}
router
  .post('/{{kebabCasePlural}}/signin', function * (req, res) {
    const result = yield controller.signin(req.body.email, req.body.password);
    res.json(result);
  })
  .post('/{{kebabCasePlural}}/signout', function * (req, res) {
    const result = yield controller.signout(req.body);
    res.json(result);
  });
{{/isUser}}
