const { Router } = require('express');
const {{camelCasePlural}} = require('../controllers/{{snakeCasePlural}}');

const serialize = ({{camelCase}}) => {
  const data = Object.assign({}, {{camelCase}});
  {{#isUser}}
  delete(data.password);
  {{/isUser}}
  return data;
};

const router = module.exports = new Router()
  .get('', function * (req, res) {
    const list = yield {{camelCasePlural}}.all(req.query);
    res.json(list.map(serialize));
  })
  .get('/:id', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.find(req.params.id);
    res.json(serialize({{camelCase}}));
  })
  .post('', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.create(req.body);
    res.status(201).json(serialize({{camelCase}}));
  })
  .put('/:id', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.update(req.params.id, req.body);
    res.json(serialize({{camelCase}}));
  })
  .delete('/:id', function * (req, res) {
    yield {{camelCasePlural}}.delete(req.params.id);
    res.json({ ok: true });
  {{^isUser}}
  });
  {{/isUser}}
  {{#isUser}}
  })
  .post('/signin', function * (req, res) {
    const result = yield {{camelCasePlural}}.signin(req.body.email, req.body.password);
    res.json(result);
  })
  .post('/signout', function * (req, res) {
    const result = yield {{camelCasePlural}}.signout(req.body);
    res.json(result);
  });
  {{/isUser}}

router.ws('', (socket, req) => {
  {{camelCasePlural}}.watch(req.query).then(({ result: cursor, warns = [], count }) => {
    warns.forEach(warn => socket.emit('warning', warn));

    if (count) socket.emit('metadata', { count });

    cursor.each((err, data) => {
      if (!data) return null;
      if (data.state) return socket.emit('state', data);
      return socket.emit('record', data);
    });
  });
});
