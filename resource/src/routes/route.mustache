const { Router } = require('express');
const {{camelCasePlural}} = require('../controllers/{{snakeCasePlural}}');

const serialize = ({{camelCase}}) => {
  const data = Object.assign({}, {{camelCase}});
  {{#isUser}}
  delete(data.password);
  {{/isUser}}
  return data;
};

const router = module.exports = new Router()
  .get('', function * (req, res) {
    const list = yield {{camelCasePlural}}.all(req.query);
    res.json(list.map(serialize));
  })
  .get('/:id', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.find(req.params.id);
    res.json(serialize({{camelCase}}));
  })
  .post('', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.create(req.body);
    res.status(201).json(serialize({{camelCase}}));
  })
  .put('/:id', function * (req, res) {
    const {{camelCase}} = yield {{camelCasePlural}}.update(req.params.id, req.body);
    res.json(serialize({{camelCase}}));
  })
  .delete('/:id', function * (req, res) {
    yield {{camelCasePlural}}.delete(req.params.id);
    res.json({ ok: true });
  {{^isUser}}
  });
  {{/isUser}}
  {{#isUser}}
  })
  .post('/signin', function * (req, res) {
    const result = yield {{camelCasePlural}}.signin(req.body.email, req.body.password);
    res.json(result);
  })
  .post('/signout', function * (req, res) {
    const result = yield {{camelCasePlural}}.signout(req.body);
    res.json(result);
  });
  {{/isUser}}

const logger = require('../utils/logger');
router.socket = (socket, req) => {
  {{camelCasePlural}}.watch(req.query).then(({ feed, count }) => {
    socket.emit('metadata', { count });

    cursor.each((err, doc) => {
      if (err) {
        logger.error(err);
      } else if (!doc.isSaved()) { // was deleted
        socket.emit('deleted', doc);
      } else if (doc.getOldValue()) { // was updated
        socket.emit('updated', doc);
      } else { // was created
        socket.emit('created', doc);
      }
    });
  }).catch(error => logger.error(error));
};
