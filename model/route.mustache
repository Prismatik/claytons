const Router = require('express').Router;
const _ = require('lodash');
const controller = require('../controllers/{{fileName}}.js');

const router = Router();

const errHandlerFactory = res => {
  return err => {
    res.status(err.code || 500);
    res.json(err);
  };
};

const respond = (res, status) => body => {
  if (!body.result && !body.found) {
    res.status(404);
    return Promise.resolve(res.json({ err: 'Not found' }));
  }
  res.status(status || 200);
  return Promise.resolve(res.json(body));
};

module.exports = {
  http: router,
  socket: io => {
    const nsp = io.of('/{{routeName}}');
    nsp.on('connection', socket => {
      controller.watch(socket.handshake.query)
      .then(cursor => {
        cursor.each((err, data) => {
          if (!data) return null;
          if (data.state) return socket.emit('state', data);
          return socket.emit('record', data);
        });
      });
    });
  }
};

router
  .get('/{{routeName}}', (req, res) => {
    controller.get(req.query)
    .then(respond(res))
    .catch(errHandlerFactory(res));
  })
  .get('/{{routeName}}/:id', (req, res) => {
    controller.get(_.assign({ id: req.params.id }, req.query))
    .then(respond(res))
    .catch(errHandlerFactory(res));
  })
  .post('/{{routeName}}', (req, res) => {
    controller.create(req.body)
    .then(respond(res, 201))
    .catch(errHandlerFactory(res));
  })
  .put('/{{routeName}}/:id', (req, res) => {
    controller.update(req.body)
    .then(respond(res))
    .catch(errHandlerFactory(res));
  })
  .delete('/{{routeName}}/:id', (req, res) => {
    controller.delete(req.params.id)
    .then(respond(res))
    .catch(errHandlerFactory(res));
  });

{{#isUser}}
router
  .post('/{{routeName}}/signin', (req, res) => {
    controller.signin(req.body.email, req.body.password)
    .then(respond(res))
    .catch(errHandlerFactory(res));
  })
  .post('/{{routeName}}/signout', (req, res) => {
    controller.signout(req.body)
    .then(respond(res))
    .catch(errHandlerFactory(res));
  });
{{/isUser}}
